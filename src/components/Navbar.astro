---
const navItems = [
  { href: '/', text: 'Inicio' },
  { href: '/conoceme', text: 'Conóceme' },
  { href: '/servicios', text: 'Servicios' },
  { href: '/como-trabajo', text: 'Cómo Trabajo' },
  { href: '/paquetes', text: 'Paquetes' },
  { href: '/agendar', text: 'Agendar Cita' },
  { href: '/contacto', text: 'Contacto' }
];

const currentPath = Astro.url.pathname;
---

<nav class="fixed w-full bg-white/95 backdrop-blur-md shadow-sm z-50 transition-all duration-300">
  <div class="container mx-auto px-4">
    <div class="flex justify-between items-center h-20">
      <a href="/" class="font-serif text-2xl text-primary hover:text-accent transition-colors duration-300">
        Laura Esteban
      </a>

      <!-- Desktop Menu -->
      <div class="hidden md:flex space-x-8">
        {navItems.map(item => (
          <a 
            href={item.href}
            class={`text-text hover:text-primary transition-colors duration-300 relative after:content-[''] after:absolute after:left-0 after:bottom-[-4px] after:w-full after:h-[2px] after:bg-primary after:scale-x-0 hover:after:scale-x-100 after:transition-transform after:duration-300 ${currentPath === item.href ? 'text-primary after:scale-x-100' : ''}`}
          >
            {item.text}
          </a>
        ))}
      </div>

      <!-- Mobile Menu Button -->
      <button 
        id="mobile-menu-button" 
        class="md:hidden text-text hover:text-primary transition-colors duration-300"
        aria-label="Menu"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Mobile Menu -->
  <div 
    id="mobile-menu" 
    class="fixed inset-0 bg-white/95 backdrop-blur-md transform translate-x-full transition-transform duration-300 md:hidden"
  >
    <div class="container mx-auto px-4 py-8">
      <div class="flex justify-end mb-8">
        <button 
          id="close-menu-button" 
          class="text-text hover:text-primary transition-colors duration-300"
          aria-label="Cerrar menú"
        >
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      <div class="flex flex-col space-y-6">
        {navItems.map(item => (
          <a 
            href={item.href}
            class={`text-xl text-center text-text hover:text-primary transition-colors duration-300 ${currentPath === item.href ? 'text-primary font-medium' : ''}`}
          >
            {item.text}
          </a>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const closeMenuButton = document.getElementById('close-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  let lastScroll = 0;
  const nav = document.querySelector('nav');

  // Función para mostrar/ocultar el menú móvil
  function toggleMobileMenu() {
    mobileMenu?.classList.toggle('translate-x-full');
    document.body.classList.toggle('overflow-hidden');
  }

  // Event listeners para los botones del menú
  mobileMenuButton?.addEventListener('click', toggleMobileMenu);
  closeMenuButton?.addEventListener('click', toggleMobileMenu);

  // Ocultar/mostrar navbar al hacer scroll
  window.addEventListener('scroll', () => {
    const currentScroll = window.pageYOffset;
    
    if (currentScroll <= 0) {
      nav?.classList.remove('-translate-y-full');
      return;
    }

    if (currentScroll > lastScroll && !mobileMenu?.classList.contains('translate-x-full')) {
      nav?.classList.remove('-translate-y-full');
    } else if (currentScroll > lastScroll && currentScroll > 100) {
      nav?.classList.add('-translate-y-full');
    } else {
      nav?.classList.remove('-translate-y-full');
    }

    lastScroll = currentScroll;
  });
</script>